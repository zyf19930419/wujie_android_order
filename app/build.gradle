apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.wujiemall.order"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86', 'x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'wotiankeji'
            keyPassword 'wotian999888'
            storeFile file('../wotian_sign.keystore')
            storePassword 'wotian999888'
            v2SigningEnabled false
        }
        debugConfig {}
    }

    buildTypes {
        release {
            /*minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'*/
            minifyEnabled true
            zipAlignEnabled true  //Zipalign优化
            shrinkResources true  //移除无用的资源
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false  //混淆
            zipAlignEnabled true  //Zipalign优化
            shrinkResources false  //移除无用的资源
            signingConfig signingConfigs.releaseConfig
        }
    }
    sourceSets{
        main{
            jniLibs.srcDir 'libs'
            //说明so的路径为该libs路径，关联所有地图SDK的so文件
        }
    }

    splits {
        abi {
            enable true//enable： 启用ABI拆分机制
            //exclude： 默认情况下所有ABI都包括在内，你可以移除一些ABI。
            reset()//reset()：重置ABI列表为只包含一个空字符串（这可以实现，在与include一起使用来可以表示要使用哪一个ABI，而不是要忽略哪一些ABI）
            include 'x86', 'armeabi-v7a','x86_64'//include：指明要包含哪些ABI
            universalApk true//universalApk：指示是否打包一个通用版本（包含所有的ABI）。默认值为 false。
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.qmuiteam:qmui:1.1.3'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-7'
    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-7'
    //https://github.com/Bigkoo/Android-PickerView 仿照ios滚轮
    implementation 'com.contrarywind:Android-PickerView:4.1.4'
    //百度地图
    implementation fileTree('libs/baidumapapi_map_v4_3_1.jar')

    implementation 'com.flipboard:bottomsheet-core:1.5.1'

}
